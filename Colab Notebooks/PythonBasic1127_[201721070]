{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"PythonBasic1127_[201721070]","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyN3YSIM8WCuWE6TeG4kSuF5"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"U8fXzuukurRe"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"14J1uByQyisC"},"source":["#스마트폰 내부\n","- PCD보드 안에 메모리, cpu, 카메라 구동 등등 다있음.\n","- Mobilile AP cpu 역할, NFC, 가속도 센서 이런거 있음\n","\n","#Raspberry Pi 4\n","- 신용카드 크긴데 많은 기능과 성능이 있음\n","- 스마트폰이 더 많은 기능이 있음. 라즈베리파이는 기능은 더 적고 교육용이라 적당하게 만들고 많은 활용을 할 수 있음.\n","- 성능 좋은 교육용 기계\n","- 와이파이, 블루투스, 비디오코어, hdmi 2개. cpu도 있고\n","\n","# 컴퓨터 = 하드웨어(위에 두개) + 소프트웨어\n","## 하드웨어\n","- 전자회로 및 기계장치\n","- 입출력장치 중앙처리장치 기억장치\n","- 버스 : 각 구성 요소들을 연결하는 데이터의 통로\n","## 소프트웨어\n","- 하드웨어를 제어하여 작업을 수행하는 프로그램\n","- 명령문과 데이터로 구성\n","- 사람이 이해할 수 있는 고급언어로 작성 : C, Java, Python. C가 가장 성능이 좋음. 파이썬도 컴파일이 되긴하나 아주 조금 빨라짐. \n","\n","##입력장치\n","- 컴ㅍ터가 처리할 수 있는 형태로 데이터/명령을 받음. 마이크, 디스플레이스, 키보드, 마우스 \n","\n","## 프로세서 - CPU\n","- 컴퓨터 명령어들을 수행\n","\n","## 출력장치\n","- 처리된 데이터를 사람이 이해라 수 있는 형태로 출력, 모니터\n","\n","## 저장장치\n","- 주기억장치 : 처리속도에 중요한 명령어와 데이터 보관 RAM, CPU와 가까움, 휘발성이라 날라감, 전기가 나가면 지워짐\n","- 보조기억장치 : 하드디스크(자성체 원판형) SSD(반도체) 데이터 보관 -지속성\n","\n","## CPU\n","- intel8080 빌게이츠의 시작\n","- 애플은 범용컴퓨터의 시작\n","\n","intel Xeon - 전력소비는 크나 성능이 좋아서 서버에  사용 \n","\n","- CPU = ALU + CU +register\n","- ALU : 산술논리 연산을 하는 회로\n","- 제어장치(CU) : 명령과 제어신호를 생성, 컨트롤 유닛임. \n","- 레지스터 : 임시 기억 장소 , CPU에서 사용하는 데이터를 일시적을 저장, CPU 내부에 잇어서 매우빠름\n","크기가 크진않음.\n","\n","##CPU 작동과정\n","-제어장치가 읽고 쓰는 역할을 하고 ALU에 보내 처리한 작업물을 씨피유에 제어장치를 통해 처리된다.\n","\n","## 정보처리성능\n","- 8비트 : 동시에 8비트 처리\n","- 64비트 : 8바이트 동시처리\n","- 헤르츠 : 초당처리되는 머신 사이클 수 GHz 초당10억번 처리\n","- MIPS : 1초에 몇백만번 명령어 처리가 되냐? 클럭수보단 이게 더 성능이 좋다는 지표가 됨.\n","- MELOPS: 1초에 몇백만번 부동소수점 계산을 하냐?\n","- GFLOPS, TELOPS : 너무 성능이 좋아서 더 좋은 지표.\n","\n","## 프로그램 고정형 구조\n","- 초기 컴퓨터 설계 구조\n","- 프로그램을 변경 불가하게 박아놓음\n","- 칩을 바꾸는거임. 다른거 쓰려면 칩을 바꿔야해\n","- 펌웨어임.\n","- 명령어가 하드웨어로 직접 구현\n","## 프로그램 내장형 구조 : Von Neumann 구조\n","- 메모리에 프로그램을 넣고 필요할떄 꺼내쓰는 형태\n","- OS도 프로그램 명령어 ㅇㅇ\n","- 처리 유닛, 레지스터, 제어유닛, 메모리 형태의 현대 컴퓨터 구조의 시조\n","- 컴퓨터가 다른 동작을 하려면 프로그램 명령어를 다시 메모리에 저장\n","- 프로그램 명령어가 다른 프로그램 명령어 생성도 가능(컴파일러)\n"," \n"," ## 주기억장치\n"," - cpu 바로 옆에, 속도가 빠름 \n"," - 프로그램 데이터가 저장된 위치\n"," ## 캐시 \n"," - 자주 사용되는 내용을 일시적으로 저장하여 프로그램 실행 속도를 향상\n"," - CPU 캐시, 디스크 캐시\n"," ## 보조기억장치\n"," - 지속적인 저장 가능\n"," - 자기디스크 : 자성을 갖고있음, 플로피 하드\n"," - 광디스크 : cd dvd\n"," - flash memory : usb, \n","\n"," ## Ram \n"," - 파워꺼지면 메모리 지워짐\n"," - DRAM 대새\n"," - CPU에서 직접 접근 가능.\n","\n"," ## ROM\n"," - 대부분 읽기만 가능 - 부팅할 떄, 사용되는 bios, 운영체제 어딨니 이런거\n"," - 전원 끊겨도 내용 보존\n","-  한번 프로그램 가능한 PROM\n","- 내용 변경 가능하나 어려운 EPROM\n","\n","##\n","- 클라우드 서버도 ssd로 사용하는 것 추천\n","\n","## bus\n","- 컴퓨터의 통로\n","- PCI PCI Exppress\n","- 칩내부 형태, 칩 외부 형태가 있음.\n","- 버스의 폭(동시에 보낼 수 있는 양은) ALU, Register의 워드 단위와 일치. 몇 비트야?\n","- 데이터 전송 속도는 컴퓨터의 clock cycle에 종속\n","\n","- parallel bus : 원하는 곳으로 감\n","- serial bus : 무조건 메모리를 거침\n","\n","## 코드가 명령어가 되는 과정\n","- C - 전처리 - 컴파일 - 어셈블(기계어 직전) - 링커(라이브러리랑 묶고) - 실행파일(기계어)\n","- 파이썬, R같은 대화형 언어는 컴파일하지 않음. 상대적으로 느림. 대신 코딩이 쉬움\n","\n","## 운영체제\n","- 하드웨어 위에서 운영체제가 돌아감.\n","- 시스템 하드웨어를 관리하고 응용소프트웨어를 실행, 하드웨어 추상화플랫폼고 공통 시스템 서비스 제공\n","- 프로세서, 기억장치 등 자원을 관리\n","- 다양한 기능이 있음 영상 참고\n","- 운영체제ㄱ 없다면? -> 하드웨어를 직접 상대해야함, 자원할당도 직접 요청하고, 수없이 많은 복잡한 일이 생김, 운영체제가 하는 일이 응용프로그램이 해줘야함.\n","\n","## 병렬처리\n","- 하드웨어가 여러개 씨피유로 처리하는 것\n","- 각 프로그램 명령어 들을 골고루 순차적으로 수행\n","- 씨피유하나면 병렬처리를 시뮬레이트함. 다 분배해줘서 골고루 잘 도는것처럼."]}]}